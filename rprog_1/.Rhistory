install.packages("KernSmooth")
library(KernSmooth)
clear
clc
clr
clean
clear()
install.packages("swirl")
libiary(swirl)
library(swirl)
swirl()
bye()
bye()
getwd()
getwd()
dir()
ls()
x <- c(.5, .6)
x
y <- c("a", TRUE)
y
y <- c(1.7, "a")
y <- c(TRUE, 2)
list(10, 12, 14)
list(10, 12, 14)[[3]]
c(1,2)
x <- list(a = list(10, 12, 14), b = c(3.14, 2.81))
x[2]
x[[2]]
x[[2 1]]
x[[(2 1)]]
x[[c(2, 1)]]
c(2,1)
xxxx = c(2,1)
xxxx <- c(2,1)
x[[2]][[1]]
x[[2]]
x[[2]][1]
x[[2]][[[1]]]
x[2]
a=x[2]
a=x[[1]]
a=x[1]
a[1]
a[[1]]
b=a[[1]]
b[[1]]
y <- data.frame(a = 1, b = "a")
dput(y)
View(y)
dput(y, file = "y.R")
new.y <- dget("y.R")
View(new.y)
View(new.y)
View(y)
new.y
clear
clear()
clean()
str(file)
x =-4
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
z=cbind(x, y)
z
class(z)
x <- list(2, "a", "b", TRUE)
x[[2]]
z=x[[2]]
z
x <- 1:4
y <- 2
x+y
x <- c(3, 5, 1, 10, 12, 6)
x[x <= 5] <- 0
x
setdir(Google\ 雲端硬碟)
setdir(Google\\ 雲端硬碟)
setdir("Google\\ 雲端硬碟")
setwd("Google\\ 雲端硬碟")
setwd("Google\ 雲端硬碟")
setwd(Coursera)
setwd("Coursera')
setwd("Coursera")
ls
setwd
setwd("R_programming")
ls
clear
read.csv("hw1_data.csv")
data = read.csv("hw1_data.csv")
nrows(data)
nrow(data)
data[c(152,153),]
data[c(47),]
data[,$O]
data[,$Ozone]
data[,1]
View(data)
View(data)
data[,"Ozone"]
ans = data[,"Ozone"]
ans
sum(is.na(ans))
ans1 = ans(~is.na(ans))
ans1 = ans[~is.na(ans)]
ans1 = ans[!is.na(ans)]
ans1
mean(ans1)
idx = data[,"Ozone"]>31
idx = (data[,"Ozone"]>31) & (data[,"Temp"]>90)
idx
c(1,2,3,4,5)[NA]
mean(c(1,2,3,4,5)[NA])
idx = !is.na(idx)
idx
idx = (data[,"Ozone"]>31) & (data[,"Temp"]>90)
idx[is.na(idx)] = FALSE
idx
mean(data[idx,"Solar.R"])
idx = data(,"Month")==6
idx = data[,"Month"]==6
idx
mean(data[idx,'Temp'])
idx = data[,"Month"]==5
idx
max(data[idx,"Ozone"])
idx[is.na(idx)] = FALSE
max(data[idx,"Ozone"])
data[idx,"Ozone"]
idx2 = is.na(data[idx,"Ozone"])
idx2
idx2 = !is.na(data[idx,"Ozone"])
idx2
data[idx,"Ozone"][idx2]
max(data[idx,"Ozone"][idx2])
source('~/Google 雲端硬碟/Coursera/R_programming/quiz2.R')
cube(3)
*/
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
z <- 10
f(3)
f(3)
source('~/Google 雲端硬碟/Coursera/R_programming/quiz2.R')
source('~/Google 雲端硬碟/Coursera/R_programming/quiz2.R')
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
3y
3L=10
'1'
'1'+'2'
cat('1','2')
y=cat('1','2')
y=strcat('1','2')
cat('1','2')
y=cat('1','2')
as.character.numeric_version(3)
as.character.numeric_version(3,3)
formatC(1, width = 6, format = "d", flag = "0")
y=formatC(1, width = 6, format = "d", flag = "0")
class(y)
y=formatC(111, width = 6, format = "d", flag = "0")
source('~/Google 雲端硬碟/Coursera/R_programming/pollutantmean.R')
pollutantmean(id=1:10)
y=pollutantmean(id=1:10)
source('~/Google 雲端硬碟/Coursera/R_programming/pollutantmean.R')
y=pollutantmean(id=1:10)
y
source('~/Google 雲端硬碟/Coursera/R_programming/pollutantmean.R')
y
y=pollutantmean(id=1:10)
y
y=pollutantmean(dir="specdata,"id=1:10)
y=pollutantmean(dir="specdata", id=1:10)
y
source('~/Google 雲端硬碟/Coursera/R_programming/pollutantmean.R')
y=pollutantmean(dir="specdata", id=1:10)
y
source('~/.active-rstudio-document')
source('~/Google 雲端硬碟/Coursera/R_programming/pollutantmean.R')
y=pollutantmean(dir="specdata", id=1:10)
y
source('~/Google 雲端硬碟/Coursera/R_programming/pollutantmean.R')
c()
x=c()
read.csv("specdata/001.csv")
x=read.csv("specdata/001.csv")
View(x)
x[sulfate]
x[,sulfate]
x[,'sulfate']
x=read.csv("specdata/001.csv")[,'sulfate']
source('~/Google 雲端硬碟/Coursera/R_programming/pollutantmean.R')
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
x=read.csv("specdata/001.csv")
View(x)
result <- data.frame(1:4, nobs=NULL)
result <- data.frame(1:4, nobs=0)
View(result)
View(result)
id=1:3
result <- data.frame(id, nobs=0)
View(result)
source('~/Google 雲端硬碟/Coursera/R_programming/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", c(2, 4, 8, 10, 12))
source('~/Google 雲端硬碟/Coursera/R_programming/complete.R')
source('~/Google 雲端硬碟/Coursera/R_programming/complete.R')
source('~/Google 雲端硬碟/Coursera/R_programming/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
View(x)
complete.cases(x)
good =complete.cases(x)
sum(good)
source('~/Google 雲端硬碟/Coursera/R_programming/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", c(2, 4, 8, 10, 12))
View(result)
View(result)
source('~/Google 雲端硬碟/Coursera/R_programming/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
submit
submit()
submit()
submit()
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
corr('specdata')
r= corr('specdata')
r= corr('specdata',400)
help cor
help(cor
)
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 150)
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
cr <- corr("specdata", 150)
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
cr <- corr("specdata", 150)
head(cr)
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
head(cr)
cr <- corr("specdata", 150)
head(cr)
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
cr <- corr("specdata", 150)
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
cr <- corr("specdata", 150)
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
cr <- corr("specdata", 150)
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
cr <- corr("specdata", 150)
id <- 1:332
result <- c()
for(mid in id){
idStr <- formatC(mid, width = 3, format = "d", flag = "0")
fileNames <- paste(directory,"/", idStr, ".csv", sep="")
pData = read.csv(fileNames)
good <- complete.cases( pData )
corId <- if(sum(good)>threshold){
cor(pData[good,'sulfate'], pData[good,'nitrate'])
}
result <- c(result, corId)
}
result <- if(is.null(result)){0}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
corId <- if(1>0){1}
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
corr <- function(directory='specdata', threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
id <- 1:332
result <- c()
for(mid in id){
idStr <- formatC(mid, width = 3, format = "d", flag = "0")
fileNames <- paste(directory,"/", idStr, ".csv", sep="")
pData = read.csv(fileNames)
good <- complete.cases( pData )
corId <- if(sum(good)>threshold){
cor(pData[good,'sulfate'], pData[good,'nitrate'])
}
result <- c(result, corId)
}
result <- if(is.null(result)){0}
result
}
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
pData = read.csv(fileNames)
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
pData = read.csv(fileNames)
pData = read.csv(fileNames)
id <- 1:332
result <- c()
for(mid in id){
idStr <- formatC(mid, width = 3, format = "d", flag = "0")
fileNames <- paste(directory,"/", idStr, ".csv", sep="")
pData = read.csv(fileNames)
good <- complete.cases( pData )
corId <- if(sum(good)>threshold){
cor(pData[good,'sulfate'], pData[good,'nitrate'])
}
result <- c(result, corId)
}
result <- if(is.null(result)){0}
corr()
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
corr()
is.null(result)
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
corr()
r=corr()
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
r=corr()
cr <- corr("specdata", 150)
head(cr)
summary(cr)
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
cr <- corr("specdata")
summary(cr)
cr <- corr("specdata", 5000)
submit()
submit()
corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
paste(c(n, round(cr, 4)), collapse = "\n")
source('~/Google 雲端硬碟/Coursera/R_programming/corr.R')
submit()
